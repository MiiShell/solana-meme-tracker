services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://testuser:testcredentials@db:5432/memecoins
      - REDIS_URL=redis://redis:6379/0
      - X_API_KEY=testcredentials
      - COINGECKO_API_KEY=testcredentials
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672//
    depends_on:
      - db
      - redis
      - rabbitmq
    volumes:
      - ./backend:/app
    networks:
      - meme-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - meme-net

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A celery_worker:celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://testuser:testcredentials@db:5432/memecoins
      - REDIS_URL=redis://redis:6379/0
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672//
    depends_on:
      - db
      - redis
      - rabbitmq
    volumes:
      - ./backend:/app
    networks:
      - meme-net

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testcredentials
      - POSTGRES_DB=memecoins
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - meme-net

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - meme-net

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - meme-net

  prometheus:
    image: prom/prometheus:v2.47.0
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - meme-net

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - meme-net

volumes:
  pgdata:
  prometheus_data:
  grafana_data:

networks:
  meme-net:
    driver: bridge